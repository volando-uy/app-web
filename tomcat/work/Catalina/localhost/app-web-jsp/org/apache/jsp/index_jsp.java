/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.12
 * Generated at: 2025-10-14 00:53:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;
import domain.dtos.flightRoutePackage.BaseFlightRoutePackageDTO;
import java.util.*;
import java.time.format.DateTimeFormatter;
import domain.dtos.flight.BaseFlightDTO;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {


    // escape "estudiantil pero prolijo"
    private static String escAttr(String s) {
        if (s == null) return "";
        StringBuilder out = new StringBuilder(s.length() + 16);
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            switch (c) {
                case '&': out.append("&amp;"); break;
                case '<': out.append("&lt;"); break;
                case '>': out.append("&gt;"); break;
                case '"': out.append("&quot;"); break;
                case '\'': out.append("&#x27;"); break;
                default: out.append(c);
            }
        }
        return out.toString();
    }

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/src/views/components/packageList/packageList.jspf", Long.valueOf(1760402390000L));
    _jspx_dependants.put("/src/views/components/flightList/flightList.jspf", Long.valueOf(1760402390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("domain.dtos.flightRoutePackage.BaseFlightRoutePackageDTO");
    _jspx_imports_classes.add("java.time.format.DateTimeFormatter");
    _jspx_imports_classes.add("domain.dtos.flight.BaseFlightDTO");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

    // Si entran directo al JSP (sin pasar por el servlet), reenviamos al servlet /index
    if (request.getAttribute("packages") == null || request.getAttribute("flights") == null) {
        request.getRequestDispatcher("/index").forward(request, response);
        return;
    }

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"es\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n");
      out.write("    <title>Volando Index</title>\r\n");
      out.write("\r\n");
      out.write("    <!-- Tailwind -->\r\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("        tailwind.config = { theme: { extend: { colors: { brand: \"#0B4C73\" } } } }\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"bg-brand/10 min-h-screen flex flex-col\">\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "src/views/header/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<main class=\"flex-1 container mx-auto px-4 py-8 flex flex-col gap-12\">\r\n");
      out.write("    <section id=\"paquetes\" class=\"w-full\">\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    @SuppressWarnings("unchecked")
    List<BaseFlightRoutePackageDTO> pkgs =
            (List<BaseFlightRoutePackageDTO>) request.getAttribute("packages");
    boolean hasData = (pkgs != null && !pkgs.isEmpty());
    boolean many = hasData && pkgs.size() > 1;

    String modalJson = (String) request.getAttribute("pkgModalJson");
    if (modalJson == null) modalJson = "{}";

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"w-full flex flex-col items-center justify-center py-12\">\r\n");
      out.write("    <div class=\"w-full max-w-4xl space-y-8\">\r\n");
      out.write("\r\n");
      out.write("        ");
 if (!hasData) { 
      out.write("\r\n");
      out.write("        <div class=\"w-full rounded-xl border border-yellow-300 bg-yellow-50 p-4 text-yellow-900\">\r\n");
      out.write("            <strong>No hay paquetes generados todav√≠a.</strong>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 } else { 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <div id=\"pkg-carousel\"\r\n");
      out.write("             class=\"relative w-full h-[420px] mx-auto rounded-3xl shadow-xl overflow-hidden\">\r\n");
      out.write("\r\n");
      out.write("            ");
 for (int i = 0; i < pkgs.size(); i++) {
                BaseFlightRoutePackageDTO p = pkgs.get(i);
                String slideClass = (i == 0)
                        ? "opacity-100 translate-x-0 z-20 pointer-events-auto"
                        : "opacity-0 translate-x-6 z-10 pointer-events-none";

                String name  = (p.getName() != null) ? p.getName() : "Paquete";
                String desc  = (p.getDescription() != null) ? p.getDescription() : "";
                String price = (p.getTotalPrice() != null) ? p.getTotalPrice().toString() : "--";
            
      out.write("\r\n");
      out.write("            <div\r\n");
      out.write("                    class=\"js-slide ");
      out.print( slideClass );
      out.write("\r\n");
      out.write("         absolute inset-0 flex flex-col items-center justify-center\r\n");
      out.write("         w-full h-full rounded-3xl\r\n");
      out.write("         bg-gradient-to-br from-[#0B4C73]/80 via-sky-700 to-gray-900\r\n");
      out.write("         text-white px-6 shadow-2xl\r\n");
      out.write("         transition-all duration-500 ease-out transform\"\r\n");
      out.write("                    data-name=\"");
      out.print( escAttr(name) );
      out.write("\"\r\n");
      out.write("                    data-description=\"");
      out.print( escAttr(desc) );
      out.write("\"\r\n");
      out.write("                    data-price=\"");
      out.print( escAttr(price) );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("            <h3 class=\"text-2xl md:text-4xl font-bold tracking-wide mb-2\">");
      out.print( escAttr(name) );
      out.write("</h3>\r\n");
      out.write("            <p class=\"opacity-90 text-lg md:text-xl mb-4\">");
      out.print( escAttr(desc) );
      out.write("</p>\r\n");
      out.write("            <p class=\"text-lg font-medium mb-6\">\r\n");
      out.write("                Precio total: <span class=\"font-semibold\">");
      out.print( escAttr(price) );
      out.write("</span>\r\n");
      out.write("            </p>\r\n");
      out.write("\r\n");
      out.write("            <button type=\"button\"\r\n");
      out.write("                    class=\"js-open-pkg-modal inline-flex items-center gap-2 px-5 py-2 rounded-full\r\n");
      out.write("                   bg-white/90 text-gray-900 hover:bg-white shadow\"\r\n");
      out.write("                    aria-label=\"Ver detalles del paquete ");
      out.print( escAttr(name) );
      out.write("\">\r\n");
      out.write("                Ver detalles\r\n");
      out.write("                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" fill=\"none\"\r\n");
      out.write("                     viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\">\r\n");
      out.write("                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9 5l7 7-7 7\"/>\r\n");
      out.write("                </svg>\r\n");
      out.write("            </button>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        ");
 if (many) { 
      out.write("\r\n");
      out.write("        <!-- Flechas -->\r\n");
      out.write("        <button id=\"pkg-prev\"\r\n");
      out.write("                class=\"absolute left-2 top-1/2 -translate-y-1/2 bg-black/40 hover:bg-black/70\r\n");
      out.write("                         text-white rounded-full w-10 h-10 flex items-center justify-center z-30\"\r\n");
      out.write("                aria-label=\"Anterior\">\r\n");
      out.write("            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-6 h-6\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n");
      out.write("                 stroke=\"currentColor\" stroke-width=\"2\">\r\n");
      out.write("                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15 19l-7-7 7-7\"/>\r\n");
      out.write("            </svg>\r\n");
      out.write("        </button>\r\n");
      out.write("\r\n");
      out.write("        <button id=\"pkg-next\"\r\n");
      out.write("                class=\"absolute right-2 top-1/2 -translate-y-1/2 bg-black/40 hover:bg-black/70\r\n");
      out.write("                         text-white rounded-full w-10 h-10 flex items-center justify-center z-30\"\r\n");
      out.write("                aria-label=\"Siguiente\">\r\n");
      out.write("            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-6 h-6\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n");
      out.write("                 stroke=\"currentColor\" stroke-width=\"2\">\r\n");
      out.write("                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9 5l7 7-7 7\"/>\r\n");
      out.write("            </svg>\r\n");
      out.write("        </button>\r\n");
      out.write("\r\n");
      out.write("        <!-- Dots -->\r\n");
      out.write("        <div id=\"pkg-dots\" class=\"absolute bottom-4 left-0 right-0 z-30 flex justify-center gap-2\"></div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- Datos del modal desde el servidor -->\r\n");
      out.write("<script>window.__PKG_MODAL_DATA__ = ");
      out.print( modalJson );
      out.write(";</script>\r\n");
      out.write("\r\n");
      out.write("<!-- JS del componente -->\r\n");
      out.write("<script defer src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/src/views/components/packageList/packageList.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <section id=\"vuelos\" class=\"w-full\">\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    @SuppressWarnings("unchecked")
    List<BaseFlightDTO> flights = (List<BaseFlightDTO>) request.getAttribute("flights");
    boolean hasFlights = (flights != null && !flights.isEmpty());

    DateTimeFormatter fmt = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
    boolean asCarousel = hasFlights && flights.size() > 3;

    String containerClasses = asCarousel
            ? "flex gap-6 w-full overflow-x-auto scroll-smooth no-scrollbar pr-6 -mr-6 pb-6 -mb-6 snap-x snap-mandatory"
            : "grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 w-full";

      out.write("\r\n");
      out.write("\r\n");
      out.write("<section class=\"w-full flex flex-col items-center justify-center py-8\">\r\n");
      out.write("    <div class=\"w-full max-w-5xl relative\">\r\n");
      out.write("\r\n");
      out.write("        ");
 if (!hasFlights) { 
      out.write("\r\n");
      out.write("        <div class=\"w-full rounded-xl border border-yellow-300 bg-yellow-50 p-4 text-yellow-900\">\r\n");
      out.write("            <strong>No hay vuelos para mostrar.</strong>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 } else { 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <div id=\"flight-list-container\" class=\"");
      out.print( containerClasses );
      out.write("\">\r\n");
      out.write("            ");
 for (BaseFlightDTO f : flights) {
                String img = (f.getImage() != null && !f.getImage().isEmpty())
                        ? f.getImage()
                        : "https://via.placeholder.com/640x360?text=Vuelo";
                String dep = (f.getDepartureTime() != null) ? fmt.format(f.getDepartureTime()) : "--";
                String mins = (f.getDuration() != null) ? String.valueOf(f.getDuration()) : "--";
                String eco  = (f.getMaxEconomySeats() != null) ? String.valueOf(f.getMaxEconomySeats()) : "--";
                String bus  = (f.getMaxBusinessSeats() != null) ? String.valueOf(f.getMaxBusinessSeats()) : "--";
                String created = (f.getCreatedAt() != null) ? fmt.format(f.getCreatedAt()) : "--";
            
      out.write("\r\n");
      out.write("            <!-- Card clickeable -->\r\n");
      out.write("            <article\r\n");
      out.write("                    class=\"js-flight-card bg-white rounded-2xl shadow-md ring-1 ring-black/5 overflow-hidden flex flex-col\r\n");
      out.write("                 ");
      out.print( asCarousel ? "min-w-[320px] max-w-xs w-full flex-shrink-0 snap-start" : "" );
      out.write("\r\n");
      out.write("                 cursor-pointer transition hover:-translate-y-0.5 hover:shadow-lg\"\r\n");
      out.write("                    data-name=\"");
      out.print( f.getName() );
      out.write("\"\r\n");
      out.write("                    data-image=\"");
      out.print( img );
      out.write("\"\r\n");
      out.write("                    data-dep=\"");
      out.print( dep );
      out.write("\"\r\n");
      out.write("                    data-duration=\"");
      out.print( mins );
      out.write("\"\r\n");
      out.write("                    data-economy=\"");
      out.print( eco );
      out.write("\"\r\n");
      out.write("                    data-business=\"");
      out.print( bus );
      out.write("\"\r\n");
      out.write("                    data-created=\"");
      out.print( created );
      out.write("\"\r\n");
      out.write("            >\r\n");
      out.write("                <div class=\"relative\">\r\n");
      out.write("                    <img src=\"");
      out.print( img );
      out.write("\" alt=\"");
      out.print( f.getName() );
      out.write("\" class=\"w-full h-40 object-cover\" />\r\n");
      out.write("                    <span class=\"absolute top-2 left-2 text-white/90 text-[10px] font-semibold tracking-widest\">VUELO</span>\r\n");
      out.write("                    <div class=\"absolute bottom-0 left-0 right-0 p-3 bg-gradient-to-t from-black/75 via-black/20 to-transparent\">\r\n");
      out.write("                        <h3 class=\"text-white font-semibold text-sm md:text-base truncate\">");
      out.print( f.getName() );
      out.write("</h3>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"p-4 flex-1\">\r\n");
      out.write("                    <p class=\"text-gray-600 text-sm\">Sale: <span class=\"font-medium\">");
      out.print( dep );
      out.write("</span></p>\r\n");
      out.write("                    <p class=\"text-gray-600 text-sm\">Duraci√≥n: <span class=\"font-medium\">");
      out.print( mins );
      out.write("</span> min</p>\r\n");
      out.write("                </div>\r\n");
      out.write("            </article>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        ");
 if (asCarousel) { 
      out.write("\r\n");
      out.write("        <!-- Flecha izquierda -->\r\n");
      out.write("        <button id=\"flight-prev\" aria-label=\"Anterior\"\r\n");
      out.write("                class=\"absolute left-0 top-1/2 -translate-y-1/2 z-10\r\n");
      out.write("                 bg-black/40 hover:bg-black/70 text-white rounded-full\r\n");
      out.write("                 w-10 h-10 md:w-12 md:h-12 hidden items-center justify-center focus:outline-none\">\r\n");
      out.write("            <svg class=\"w-5 md:w-7 h-5 md:h-7\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"\r\n");
      out.write("                 viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15 19l-7-7 7-7\"/></svg>\r\n");
      out.write("        </button>\r\n");
      out.write("\r\n");
      out.write("        <!-- Flecha derecha -->\r\n");
      out.write("        <button id=\"flight-next\" aria-label=\"Siguiente\"\r\n");
      out.write("                class=\"absolute right-0 top-1/2 -translate-y-1/2 z-10\r\n");
      out.write("                 bg-black/40 hover:bg-black/70 text-white rounded-full\r\n");
      out.write("                 w-10 h-10 md:w-12 md:h-12 hidden items-center justify-center focus:outline-none\">\r\n");
      out.write("            <svg class=\"w-5 md:w-7 h-5 md:h-7\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"\r\n");
      out.write("                 viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9 5l7 7-7 7\"/></svg>\r\n");
      out.write("        </button>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <style>\r\n");
      out.write("            .no-scrollbar{ -ms-overflow-style:none; scrollbar-width:none; }\r\n");
      out.write("            .no-scrollbar::-webkit-scrollbar{ width:0; height:0; }\r\n");
      out.write("        </style>\r\n");
      out.write("\r\n");
      out.write("        <script defer src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/src/views/components/flightList/flightList.js\"></script>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</section>\r\n");
      out.write("\r\n");
      out.write("    </section>\r\n");
      out.write("</main>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "src/views/footer/footer.jspf", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>window.__BASE__ = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";</script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/index.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
